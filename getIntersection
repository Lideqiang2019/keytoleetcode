# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        '''
        1 → 2 ↘  ↗ → 4                                    1 → 2 ↘  ↗ → 4 → ① → → → 3(②) ❤ 相遇了
        ① → → 3(②) → ③   把4接到①前面，把③接到1前面   ① → → 3(②) → ③ → 1 → 2 ↗   若非相交链表则同时走到None
        '''
        a, b = (headA, headB) if headA and headB else (None, None)
        while a != b: a, b = not a and headB or a.next, not b and headA or b.next
        return a
