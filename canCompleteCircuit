class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        '''
        不用很复杂，一次遍历做好两件事：

        rest代表总的油数和消耗数目之差

        oil_minvalue 表示遍历过程中，rest能到达的最小值

        record_point 代表每一次的rest取更小的值时，当前的加油站的位置。

        rest<0 代表失败，结果就是-1

        在当前最小的rest，即oil_minvalue处，记录当前加油站的位置，只用从下个位置出发，并且保证最终的rest>=0，那么下         个位置就是答案。即record_point + 1
        '''
        rest = 0
        oil_minvalue = 0
        record_point = -1
        for i in range(len(gas)):
            rest += gas[i] - cost[i]
            if rest < oil_minvalue:
                oil_minvalue = rest
                record_point = i
        return -1 if rest < 0 else record_point + 1
