class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        '''
        动态划归：当前最大的累计收益= max(前一家的收益，前前一家的收益加上当前的收益)

        状态转移方程： dp[i] = max(dp[i-1], dp[i-2]+nums[i])
        '''
        n=len(nums)
        if n==0:
            return 0
        if n==1:
            return nums[0]
        
        p=nums[0]
        q=max(nums[0],nums[1])
        
        for i in range(2,n):
            next_m=max(p+nums[i],q)
            p,q=q,next_m
        return q
